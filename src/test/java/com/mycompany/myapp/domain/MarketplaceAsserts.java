package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MarketplaceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMarketplaceAllPropertiesEquals(Marketplace expected, Marketplace actual) {
        assertMarketplaceAutoGeneratedPropertiesEquals(expected, actual);
        assertMarketplaceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMarketplaceAllUpdatablePropertiesEquals(Marketplace expected, Marketplace actual) {
        assertMarketplaceUpdatableFieldsEquals(expected, actual);
        assertMarketplaceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMarketplaceAutoGeneratedPropertiesEquals(Marketplace expected, Marketplace actual) {
        assertThat(expected)
            .as("Verify Marketplace auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMarketplaceUpdatableFieldsEquals(Marketplace expected, Marketplace actual) {
        assertThat(expected)
            .as("Verify Marketplace relevant properties")
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getMarketplaceLogo()).as("check marketplaceLogo").isEqualTo(actual.getMarketplaceLogo()))
            .satisfies(
                e ->
                    assertThat(e.getMarketplaceLogoContentType())
                        .as("check marketplaceLogo contenty type")
                        .isEqualTo(actual.getMarketplaceLogoContentType())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMarketplaceUpdatableRelationshipsEquals(Marketplace expected, Marketplace actual) {}
}
